# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Applicable to each test program:
srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@am__append_1 = $(MY_LD)$(top_builddir)/src/HepPID
check_PROGRAMS = listParticleNames$(EXEEXT) \
	testParticleIDMethods$(EXEEXT) listHerwigTranslation$(EXEEXT) \
	listPythiaTranslation$(EXEEXT) listQQTranslation$(EXEEXT) \
	listIsajetTranslation$(EXEEXT) listEvtGenTranslation$(EXEEXT) \
	listPDGTranslation$(EXEEXT)
subdir = tests/HepPID
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/listEvtGenTranslation.sh.in \
	$(srcdir)/listHerwigTranslation.sh.in \
	$(srcdir)/listIsajetTranslation.sh.in \
	$(srcdir)/listPDGTranslation.sh.in \
	$(srcdir)/listParticleNames.sh.in \
	$(srcdir)/listPythiaTranslation.sh.in \
	$(srcdir)/listQQTranslation.sh.in \
	$(srcdir)/testParticleIDMethods.sh.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/HepPDT/defs.h
CONFIG_CLEAN_FILES = testParticleIDMethods.sh listParticleNames.sh \
	listIsajetTranslation.sh listHerwigTranslation.sh \
	listEvtGenTranslation.sh listPythiaTranslation.sh \
	listPDGTranslation.sh listQQTranslation.sh
am_listEvtGenTranslation_OBJECTS = listEvtGenTranslation.$(OBJEXT)
listEvtGenTranslation_OBJECTS = $(am_listEvtGenTranslation_OBJECTS)
listEvtGenTranslation_LDADD = $(LDADD)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@listEvtGenTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/libHepPID.$(SHEXT)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_TRUE@listEvtGenTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/HepPID.$(SHEXT)
@BUILD_STATIC_TRUE@listEvtGenTranslation_DEPENDENCIES =  \
@BUILD_STATIC_TRUE@	$(top_builddir)/src/HepPID/libHepPID.a
am_listHerwigTranslation_OBJECTS = listHerwigTranslation.$(OBJEXT)
listHerwigTranslation_OBJECTS = $(am_listHerwigTranslation_OBJECTS)
listHerwigTranslation_LDADD = $(LDADD)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@listHerwigTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/libHepPID.$(SHEXT)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_TRUE@listHerwigTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/HepPID.$(SHEXT)
@BUILD_STATIC_TRUE@listHerwigTranslation_DEPENDENCIES =  \
@BUILD_STATIC_TRUE@	$(top_builddir)/src/HepPID/libHepPID.a
am_listIsajetTranslation_OBJECTS = listIsajetTranslation.$(OBJEXT)
listIsajetTranslation_OBJECTS = $(am_listIsajetTranslation_OBJECTS)
listIsajetTranslation_LDADD = $(LDADD)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@listIsajetTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/libHepPID.$(SHEXT)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_TRUE@listIsajetTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/HepPID.$(SHEXT)
@BUILD_STATIC_TRUE@listIsajetTranslation_DEPENDENCIES =  \
@BUILD_STATIC_TRUE@	$(top_builddir)/src/HepPID/libHepPID.a
am_listPDGTranslation_OBJECTS = listPDGTranslation.$(OBJEXT)
listPDGTranslation_OBJECTS = $(am_listPDGTranslation_OBJECTS)
listPDGTranslation_LDADD = $(LDADD)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@listPDGTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/libHepPID.$(SHEXT)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_TRUE@listPDGTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/HepPID.$(SHEXT)
@BUILD_STATIC_TRUE@listPDGTranslation_DEPENDENCIES =  \
@BUILD_STATIC_TRUE@	$(top_builddir)/src/HepPID/libHepPID.a
am_listParticleNames_OBJECTS = listParticleNames.$(OBJEXT)
listParticleNames_OBJECTS = $(am_listParticleNames_OBJECTS)
listParticleNames_LDADD = $(LDADD)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@listParticleNames_DEPENDENCIES = $(top_builddir)/src/HepPID/libHepPID.$(SHEXT)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_TRUE@listParticleNames_DEPENDENCIES = $(top_builddir)/src/HepPID/HepPID.$(SHEXT)
@BUILD_STATIC_TRUE@listParticleNames_DEPENDENCIES =  \
@BUILD_STATIC_TRUE@	$(top_builddir)/src/HepPID/libHepPID.a
am_listPythiaTranslation_OBJECTS = listPythiaTranslation.$(OBJEXT)
listPythiaTranslation_OBJECTS = $(am_listPythiaTranslation_OBJECTS)
listPythiaTranslation_LDADD = $(LDADD)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@listPythiaTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/libHepPID.$(SHEXT)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_TRUE@listPythiaTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/HepPID.$(SHEXT)
@BUILD_STATIC_TRUE@listPythiaTranslation_DEPENDENCIES =  \
@BUILD_STATIC_TRUE@	$(top_builddir)/src/HepPID/libHepPID.a
am_listQQTranslation_OBJECTS = listQQTranslation.$(OBJEXT)
listQQTranslation_OBJECTS = $(am_listQQTranslation_OBJECTS)
listQQTranslation_LDADD = $(LDADD)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@listQQTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/libHepPID.$(SHEXT)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_TRUE@listQQTranslation_DEPENDENCIES = $(top_builddir)/src/HepPID/HepPID.$(SHEXT)
@BUILD_STATIC_TRUE@listQQTranslation_DEPENDENCIES =  \
@BUILD_STATIC_TRUE@	$(top_builddir)/src/HepPID/libHepPID.a
am_testParticleIDMethods_OBJECTS = testParticleIDMethods.$(OBJEXT)
testParticleIDMethods_OBJECTS = $(am_testParticleIDMethods_OBJECTS)
testParticleIDMethods_LDADD = $(LDADD)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@testParticleIDMethods_DEPENDENCIES = $(top_builddir)/src/HepPID/libHepPID.$(SHEXT)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_TRUE@testParticleIDMethods_DEPENDENCIES = $(top_builddir)/src/HepPID/HepPID.$(SHEXT)
@BUILD_STATIC_TRUE@testParticleIDMethods_DEPENDENCIES =  \
@BUILD_STATIC_TRUE@	$(top_builddir)/src/HepPID/libHepPID.a
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include/HepPDT
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(listEvtGenTranslation_SOURCES) \
	$(listHerwigTranslation_SOURCES) \
	$(listIsajetTranslation_SOURCES) $(listPDGTranslation_SOURCES) \
	$(listParticleNames_SOURCES) $(listPythiaTranslation_SOURCES) \
	$(listQQTranslation_SOURCES) $(testParticleIDMethods_SOURCES)
DIST_SOURCES = $(listEvtGenTranslation_SOURCES) \
	$(listHerwigTranslation_SOURCES) \
	$(listIsajetTranslation_SOURCES) $(listPDGTranslation_SOURCES) \
	$(listParticleNames_SOURCES) $(listPythiaTranslation_SOURCES) \
	$(listQQTranslation_SOURCES) $(testParticleIDMethods_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AM_CXXFLAGS = @AM_CXXFLAGS@
AM_LDFLAGS = @AM_LDFLAGS@
AR = @AR@
ARFLAGS = @ARFLAGS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BUILD_SHARED_FALSE = @BUILD_SHARED_FALSE@
BUILD_SHARED_TRUE = @BUILD_SHARED_TRUE@
BUILD_STATIC_FALSE = @BUILD_STATIC_FALSE@
BUILD_STATIC_TRUE = @BUILD_STATIC_TRUE@
BUILD_VISUAL_FALSE = @BUILD_VISUAL_FALSE@
BUILD_VISUAL_TRUE = @BUILD_VISUAL_TRUE@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
COPY_P = @COPY_P@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DIFF_Q = @DIFF_Q@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@ $(am__append_1)
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MY_LD = @MY_LD@
MY_SHFLAGS = @MY_SHFLAGS@
MY_SHLINK = @MY_SHLINK@
MY_SHNAME = @MY_SHNAME@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SHEXT = @SHEXT@
STRIP = @STRIP@
USE_GMAKE_FALSE = @USE_GMAKE_FALSE@
USE_GMAKE_TRUE = @USE_GMAKE_TRUE@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
@USE_GMAKE_TRUE@MAKE = gmake
INCLUDES = -I$(top_builddir)/include -I$(top_srcdir)/include
@BUILD_STATIC_FALSE@@BUILD_VISUAL_FALSE@LDADD = $(top_builddir)/src/HepPID/libHepPID.$(SHEXT)
@BUILD_STATIC_FALSE@@BUILD_VISUAL_TRUE@LDADD = $(top_builddir)/src/HepPID/HepPID.$(SHEXT)

# libraries to link, and whence
@BUILD_STATIC_TRUE@LDADD = $(top_builddir)/src/HepPID/libHepPID.a
check_SCRIPTS = \
        listParticleNames.sh testParticleIDMethods.sh  \
	listHerwigTranslation.sh listPythiaTranslation.sh listQQTranslation.sh \
	listIsajetTranslation.sh listEvtGenTranslation.sh listPDGTranslation.sh


# Identify test(s) to run when 'make check' is requested:
TESTS = \
        listParticleNames.sh testParticleIDMethods.sh \
	listHerwigTranslation.sh listPythiaTranslation.sh listQQTranslation.sh \
	listIsajetTranslation.sh listEvtGenTranslation.sh listPDGTranslation.sh


# Identify the test(s) for which failure is the intended outcome:
XFAIL_TESTS = 

# Identify the dependencies on a per-test basis:
listParticleNames_SOURCES = listParticleNames.cc
testParticleIDMethods_SOURCES = testParticleIDMethods.cc
listEvtGenTranslation_SOURCES = listEvtGenTranslation.cc
listHerwigTranslation_SOURCES = listHerwigTranslation.cc
listPythiaTranslation_SOURCES = listPythiaTranslation.cc
listPDGTranslation_SOURCES = listPDGTranslation.cc
listIsajetTranslation_SOURCES = listIsajetTranslation.cc
listQQTranslation_SOURCES = listQQTranslation.cc

# Identify input data file(s) and prototype output file(s):
EXTRA_DIST = \
        listParticleNames.output testParticleIDMethods.output \
	listPythiaTranslation.output listQQTranslation.output \
	listIsajetTranslation.output listEvtGenTranslation.output \
	listHerwigTranslation.output listPDGTranslation.output


# Identify generated file(s) to be removed when 'make clean' is requested:
CLEANFILES = *.out
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  tests/HepPID/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  tests/HepPID/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
testParticleIDMethods.sh: $(top_builddir)/config.status $(srcdir)/testParticleIDMethods.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
listParticleNames.sh: $(top_builddir)/config.status $(srcdir)/listParticleNames.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
listIsajetTranslation.sh: $(top_builddir)/config.status $(srcdir)/listIsajetTranslation.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
listHerwigTranslation.sh: $(top_builddir)/config.status $(srcdir)/listHerwigTranslation.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
listEvtGenTranslation.sh: $(top_builddir)/config.status $(srcdir)/listEvtGenTranslation.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
listPythiaTranslation.sh: $(top_builddir)/config.status $(srcdir)/listPythiaTranslation.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
listPDGTranslation.sh: $(top_builddir)/config.status $(srcdir)/listPDGTranslation.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
listQQTranslation.sh: $(top_builddir)/config.status $(srcdir)/listQQTranslation.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
listEvtGenTranslation$(EXEEXT): $(listEvtGenTranslation_OBJECTS) $(listEvtGenTranslation_DEPENDENCIES) 
	@rm -f listEvtGenTranslation$(EXEEXT)
	$(CXXLINK) $(listEvtGenTranslation_LDFLAGS) $(listEvtGenTranslation_OBJECTS) $(listEvtGenTranslation_LDADD) $(LIBS)
listHerwigTranslation$(EXEEXT): $(listHerwigTranslation_OBJECTS) $(listHerwigTranslation_DEPENDENCIES) 
	@rm -f listHerwigTranslation$(EXEEXT)
	$(CXXLINK) $(listHerwigTranslation_LDFLAGS) $(listHerwigTranslation_OBJECTS) $(listHerwigTranslation_LDADD) $(LIBS)
listIsajetTranslation$(EXEEXT): $(listIsajetTranslation_OBJECTS) $(listIsajetTranslation_DEPENDENCIES) 
	@rm -f listIsajetTranslation$(EXEEXT)
	$(CXXLINK) $(listIsajetTranslation_LDFLAGS) $(listIsajetTranslation_OBJECTS) $(listIsajetTranslation_LDADD) $(LIBS)
listPDGTranslation$(EXEEXT): $(listPDGTranslation_OBJECTS) $(listPDGTranslation_DEPENDENCIES) 
	@rm -f listPDGTranslation$(EXEEXT)
	$(CXXLINK) $(listPDGTranslation_LDFLAGS) $(listPDGTranslation_OBJECTS) $(listPDGTranslation_LDADD) $(LIBS)
listParticleNames$(EXEEXT): $(listParticleNames_OBJECTS) $(listParticleNames_DEPENDENCIES) 
	@rm -f listParticleNames$(EXEEXT)
	$(CXXLINK) $(listParticleNames_LDFLAGS) $(listParticleNames_OBJECTS) $(listParticleNames_LDADD) $(LIBS)
listPythiaTranslation$(EXEEXT): $(listPythiaTranslation_OBJECTS) $(listPythiaTranslation_DEPENDENCIES) 
	@rm -f listPythiaTranslation$(EXEEXT)
	$(CXXLINK) $(listPythiaTranslation_LDFLAGS) $(listPythiaTranslation_OBJECTS) $(listPythiaTranslation_LDADD) $(LIBS)
listQQTranslation$(EXEEXT): $(listQQTranslation_OBJECTS) $(listQQTranslation_DEPENDENCIES) 
	@rm -f listQQTranslation$(EXEEXT)
	$(CXXLINK) $(listQQTranslation_LDFLAGS) $(listQQTranslation_OBJECTS) $(listQQTranslation_LDADD) $(LIBS)
testParticleIDMethods$(EXEEXT): $(testParticleIDMethods_OBJECTS) $(testParticleIDMethods_DEPENDENCIES) 
	@rm -f testParticleIDMethods$(EXEEXT)
	$(CXXLINK) $(testParticleIDMethods_LDFLAGS) $(testParticleIDMethods_OBJECTS) $(testParticleIDMethods_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listEvtGenTranslation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listHerwigTranslation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listIsajetTranslation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listPDGTranslation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listParticleNames.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listPythiaTranslation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/listQQTranslation.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testParticleIDMethods.Po@am__quote@

.cc.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		echo "XPASS: $$tst"; \
	      ;; \
	      *) \
		echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
		xfail=`expr $$xfail + 1`; \
		echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      echo "SKIP: $$tst"; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    skipped="($$skip tests were not run)"; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
